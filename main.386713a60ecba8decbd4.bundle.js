(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{1094:function(module,exports,__webpack_require__){"use strict";var _clientApi=__webpack_require__(58),_clientLogger=__webpack_require__(38),_configFilename=__webpack_require__(1095);function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(_configFilename.args||_configFilename.argTypes)&&_clientLogger.logger.warn("Invalid args/argTypes in config, ignoring.",JSON.stringify({args:_configFilename.args,argTypes:_configFilename.argTypes})),_configFilename.decorators&&_configFilename.decorators.forEach((function(decorator){return(0,_clientApi.addDecorator)(decorator,!1)})),_configFilename.loaders&&_configFilename.loaders.forEach((function(loader){return(0,_clientApi.addLoader)(loader,!1)})),(_configFilename.parameters||_configFilename.globals||_configFilename.globalTypes)&&(0,_clientApi.addParameters)(_objectSpread(_objectSpread({},_configFilename.parameters),{},{globals:_configFilename.globals,globalTypes:_configFilename.globalTypes}),!1),_configFilename.argTypesEnhancers&&_configFilename.argTypesEnhancers.forEach((function(enhancer){return(0,_clientApi.addArgTypesEnhancer)(enhancer)}))},1095:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"parameters",(function(){return parameters}));var parameters={actions:{argTypesRegex:"^on[A-Z].*"}}},1096:function(module,exports,__webpack_require__){"use strict";(function(module){(0,__webpack_require__(70).configure)([__webpack_require__(1097),__webpack_require__(1098)],module,!1)}).call(this,__webpack_require__(109)(module))},1097:function(module,exports,__webpack_require__){var map={"./stories/Introduction.stories.mdx":1112};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=1097},1098:function(module,exports,__webpack_require__){var map={"./stories/01_GitFlow.stories.tsx":1099,"./stories/02_GitLabFlow.stories.tsx":1105,"./stories/03_GitHubFlow.stories.tsx":1106,"./stories/04_MicrosoftGiFlow.stories.tsx":1107,"./stories/05_MyGitFlow.stories.tsx":1108};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=1098},1099:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(module){__webpack_require__(0);var _storybook_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(70),_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(7),_helpers__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(6),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(1);Object(_storybook_react__WEBPACK_IMPORTED_MODULE_1__.storiesOf)("gitflow/1. git flow",module).addParameters({storySource:{source:'import * as React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { Gitgraph, Mode, Branch } from "@gitgraph/react";\nimport { GitgraphCore } from "@gitgraph/core";\n\nimport { gitGraphOptions } from "./helpers";\n\nstoriesOf("gitflow/1. git flow", module)\n  .add("Initial Repos", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch("master")\n        .commit("Empty earth");\n      }}\n    </Gitgraph>\n  ))\n  .add("Deploy to dev", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch("master")\n        .commit("Empty earth")\n        .branch("develop")\n        .commit(\'Deploy to dev\');\n      }}\n    </Gitgraph>\n  ))\n  .add("Create ocean", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch("master")\n        .commit("Empty earth")\n        .branch("develop")\n        .commit(\'Deploy to dev\')\n        .branch("features/0001-create-ocean")\n        .commit("Add my first ocean");\n      }}\n    </Gitgraph>\n  ))\n  .add("Create an humain", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch("master")\n        .commit("Empty earth");\n        const develop = master\n                .branch("develop")\n                .commit(\'Deploy to dev\');\n        develop.branch("features/0001-create-ocean")\n          .commit("Add my first ocean");\n        develop.branch("features/0002-add-humains")\n            .commit("Add my first humain");\n    }}\n    </Gitgraph>\n  ))\n  .add("Squash merge humain", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch("master")\n        .commit("Empty earth");\n        const develop = master\n                .branch("develop")\n                .commit(\'Deploy to dev\');\n        develop.branch("features/0001-create-ocean")\n          .commit("Add my first ocean");\n        develop\n            .commit("PR 1 : Add my first humain");\n    }}\n    </Gitgraph>\n  ))\n  .add("Deploy a beta", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch("master")\n        .commit("Empty earth");\n        const develop = master\n                .branch("develop")\n                .commit(\'Deploy to dev\');\n        develop.branch("features/0001-create-ocean")\n          .commit("Add my first ocean");\n        develop\n            .commit("PR 1 : Add my first humain")\n            .branch(\'releases/1.0.0\')\n            .commit(\'Deploy beta\');\n    }}\n    </Gitgraph>\n  ))\n  .add("Deploy to prod", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch("master")\n        .commit("Empty earth");\n        const develop = master\n                .branch("develop")\n                .commit(\'Deploy to dev\');\n        develop.branch("features/0001-create-ocean")\n          .commit("Add my first ocean");\n        var release = develop\n            .commit("PR 1 : Add my first humain")\n            .branch(\'releases/1.0.0\')\n            .commit(\'Deploy beta\');\n        develop.merge(release);\n        master.merge(release).tag(\'1.0.0\');\n    }}\n    </Gitgraph>\n  ))\n  .add("Fix color of ocean to blue", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch("master")\n        .commit("Empty earth");\n        const develop = master\n                .branch("develop")\n                .commit(\'Deploy to dev\');\n    var f1=    develop.branch("features/0001-create-ocean")\n          .commit("Add my first ocean");\n        var release = develop\n            .commit("PR 1 : Add my first humain")\n            .branch(\'releases/1.0.0\')\n            .commit(\'Deploy beta\');\n        develop.merge(release);\n        master.merge(release).tag(\'1.0.0\');\n        f1.commit(\'Fix color of ocean to blue\');\n    }}\n    </Gitgraph>\n  ))\n  .add("Squash merge Ocean", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch("master")\n        .commit("Empty earth");\n        const develop = master\n                .branch("develop")\n                .commit(\'Deploy to dev\');\n        var release = develop\n            .commit("PR 1 : Add my first humain")\n            .branch(\'releases/1.0.0\')\n            .commit(\'Deploy beta\');\n        develop.merge(release);\n        master.merge(release).tag(\'1.0.0\');\n        develop\n            .commit("PR 2 : Add my first ocean")\n    }}\n    </Gitgraph>\n  ))\n  .add("Oups Humain have no brain", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch("master")\n        .commit("Empty earth");\n        const develop = master\n                .branch("develop")\n                .commit(\'Deploy to dev\');\n        var release = develop\n            .commit("PR 1 : Add my first humain")\n            .branch(\'releases/1.0.0\')\n            .commit(\'Deploy beta\');\n        develop.merge(release);\n        master.merge(release).tag(\'1.0.0\');\n        develop\n            .commit("PR 2 : Add my first ocean")\n        \n        master.branch("hotfix/1.0.0")\n            .commit(\'Add a brain to a humain\');\n    }}\n    </Gitgraph>\n  ))\n  .add("Deploy brain to prod", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch("master")\n        .commit("Empty earth");\n        const develop = master\n                .branch("develop")\n                .commit(\'Deploy to dev\');\n        var release = develop\n            .commit("PR 1 : Add my first humain")\n            .branch(\'releases/1.0.0\')\n            .commit(\'Deploy beta\');\n        develop.merge(release);\n        master.merge(release).tag(\'1.0.0\');\n        develop\n            .commit("PR 2 : Add my first ocean")\n        \n       var hotfix = master.branch("hotfix/1.0.0")\n            .commit(\'Add a brain to a humain\');\n        master.merge(hotfix)\n        .tag(\'1.0.1\');\n        develop.merge(hotfix);\n    }}\n    </Gitgraph>\n  ))\n  .add("Deploy beta of ocean", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch("master")\n        .commit("Empty earth");\n        const develop = master\n                .branch("develop")\n                .commit(\'Deploy to dev\');\n        var release = develop\n            .commit("PR 1 : Add my first humain")\n            .branch(\'releases/1.0.0\')\n            .commit(\'Deploy beta\');\n        develop.merge(release);\n        master.merge(release).tag(\'1.0.0\');\n        develop\n            .commit("PR 2 : Add my first ocean")\n        \n       var hotfix = master.branch("hotfix/1.0.0")\n            .commit(\'Add a brain to a humain\');\n        master.merge(hotfix)\n        .tag(\'1.0.1\');\n        develop.merge(hotfix);\n        develop.branch(\'releases/1.1.0\')\n        .commit(\'Deploy beta\');\n    }}\n    </Gitgraph>\n  ))\n  .add("Deploy ocean on prod", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch("master")\n        .commit("Empty earth");\n        const develop = master\n                .branch("develop")\n                .commit(\'Deploy to dev\');\n        var release = develop\n            .commit("PR 1 : Add my first humain")\n            .branch(\'releases/1.0.0\')\n            .commit(\'Deploy beta\');\n        develop.merge(release);\n        master.merge(release).tag(\'1.0.0\');\n        develop\n            .commit("PR 2 : Add my first ocean")\n        \n       var hotfix = master.branch("hotfix/1.0.0")\n            .commit(\'Add a brain to a humain\');\n        master.merge(hotfix)\n        .tag(\'1.0.1\');\n        develop.merge(hotfix);\n       var release = develop.branch(\'releases/1.1.0\')\n        .commit(\'Deploy beta\');\n\n        develop.merge(release);\n        master.merge(release)\n        .tag(\'1.1.0\');\n    }}\n    </Gitgraph>\n  ))\n  .add("Conclusion", () => (\n    <div>\n      <ul>\n        <li>La branche "develop" est la vérité</li>\n        <li>Gitflow + GitVersion sont adapté pour des librairies (Version -alpha, -beta...)</li>\n        <li>Outils en ligne de command + implémentation dans GitKraken, SourceTree, ...</li>\n        <li>Repackager/Rebuild pour déployer une beta/production</li>\n        <li>End release complexe et non adapté avec les PR (Merge dans develop, merge dans master, tag sur master)</li>\n      </ul>\n      <h2>Links</h2>\n      <ul>\n      <li><a href="https://danielkummer.github.io/git-flow-cheatsheet/index.fr_FR.html">git-flow cheatsheet</a></li>\n      <li><a href="https://nvie.com/posts/a-successful-git-branching-model/">A successful Git branching model</a></li>\n      </ul>\n    </div>\n  ))',locationsMap:{conclusion:{startLoc:{col:7,line:249},endLoc:{col:3,line:264},startBody:{col:21,line:249},endBody:{col:3,line:264}},"deploy-ocean-on-prod":{startLoc:{col:7,line:218},endLoc:{col:3,line:248},startBody:{col:31,line:218},endBody:{col:3,line:248}},"deploy-beta-of-ocean":{startLoc:{col:7,line:191},endLoc:{col:3,line:217},startBody:{col:31,line:191},endBody:{col:3,line:217}},"deploy-brain-to-prod":{startLoc:{col:7,line:166},endLoc:{col:3,line:190},startBody:{col:31,line:166},endBody:{col:3,line:190}},"oups-humain-have-no-brain":{startLoc:{col:7,line:144},endLoc:{col:3,line:165},startBody:{col:36,line:144},endBody:{col:3,line:165}},"squash-merge-ocean":{startLoc:{col:7,line:125},endLoc:{col:3,line:143},startBody:{col:29,line:125},endBody:{col:3,line:143}},"fix-color-of-ocean-to-blue":{startLoc:{col:7,line:105},endLoc:{col:3,line:124},startBody:{col:37,line:105},endBody:{col:3,line:124}},"deploy-to-prod":{startLoc:{col:7,line:86},endLoc:{col:3,line:104},startBody:{col:25,line:86},endBody:{col:3,line:104}},"deploy-a-beta":{startLoc:{col:7,line:69},endLoc:{col:3,line:85},startBody:{col:24,line:69},endBody:{col:3,line:85}},"squash-merge-humain":{startLoc:{col:7,line:54},endLoc:{col:3,line:68},startBody:{col:30,line:54},endBody:{col:3,line:68}},"create-an-humain":{startLoc:{col:7,line:39},endLoc:{col:3,line:53},startBody:{col:27,line:39},endBody:{col:3,line:53}},"create-ocean":{startLoc:{col:7,line:27},endLoc:{col:3,line:38},startBody:{col:23,line:27},endBody:{col:3,line:38}},"deploy-to-dev":{startLoc:{col:7,line:17},endLoc:{col:3,line:26},startBody:{col:24,line:17},endBody:{col:3,line:26}},"initial-repos":{startLoc:{col:7,line:9},endLoc:{col:3,line:16},startBody:{col:24,line:9},endBody:{col:3,line:16}}}}}).add("Initial Repos",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){gitgraph.branch("master").commit("Empty earth")}})})).add("Deploy to dev",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){gitgraph.branch("master").commit("Empty earth").branch("develop").commit("Deploy to dev")}})})).add("Create ocean",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){gitgraph.branch("master").commit("Empty earth").branch("develop").commit("Deploy to dev").branch("features/0001-create-ocean").commit("Add my first ocean")}})})).add("Create an humain",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var develop=gitgraph.branch("master").commit("Empty earth").branch("develop").commit("Deploy to dev");develop.branch("features/0001-create-ocean").commit("Add my first ocean"),develop.branch("features/0002-add-humains").commit("Add my first humain")}})})).add("Squash merge humain",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var develop=gitgraph.branch("master").commit("Empty earth").branch("develop").commit("Deploy to dev");develop.branch("features/0001-create-ocean").commit("Add my first ocean"),develop.commit("PR 1 : Add my first humain")}})})).add("Deploy a beta",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var develop=gitgraph.branch("master").commit("Empty earth").branch("develop").commit("Deploy to dev");develop.branch("features/0001-create-ocean").commit("Add my first ocean"),develop.commit("PR 1 : Add my first humain").branch("releases/1.0.0").commit("Deploy beta")}})})).add("Deploy to prod",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("Empty earth"),develop=master.branch("develop").commit("Deploy to dev");develop.branch("features/0001-create-ocean").commit("Add my first ocean");var release=develop.commit("PR 1 : Add my first humain").branch("releases/1.0.0").commit("Deploy beta");develop.merge(release),master.merge(release).tag("1.0.0")}})})).add("Fix color of ocean to blue",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("Empty earth"),develop=master.branch("develop").commit("Deploy to dev"),f1=develop.branch("features/0001-create-ocean").commit("Add my first ocean"),release=develop.commit("PR 1 : Add my first humain").branch("releases/1.0.0").commit("Deploy beta");develop.merge(release),master.merge(release).tag("1.0.0"),f1.commit("Fix color of ocean to blue")}})})).add("Squash merge Ocean",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("Empty earth"),develop=master.branch("develop").commit("Deploy to dev"),release=develop.commit("PR 1 : Add my first humain").branch("releases/1.0.0").commit("Deploy beta");develop.merge(release),master.merge(release).tag("1.0.0"),develop.commit("PR 2 : Add my first ocean")}})})).add("Oups Humain have no brain",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("Empty earth"),develop=master.branch("develop").commit("Deploy to dev"),release=develop.commit("PR 1 : Add my first humain").branch("releases/1.0.0").commit("Deploy beta");develop.merge(release),master.merge(release).tag("1.0.0"),develop.commit("PR 2 : Add my first ocean"),master.branch("hotfix/1.0.0").commit("Add a brain to a humain")}})})).add("Deploy brain to prod",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("Empty earth"),develop=master.branch("develop").commit("Deploy to dev"),release=develop.commit("PR 1 : Add my first humain").branch("releases/1.0.0").commit("Deploy beta");develop.merge(release),master.merge(release).tag("1.0.0"),develop.commit("PR 2 : Add my first ocean");var hotfix=master.branch("hotfix/1.0.0").commit("Add a brain to a humain");master.merge(hotfix).tag("1.0.1"),develop.merge(hotfix)}})})).add("Deploy beta of ocean",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("Empty earth"),develop=master.branch("develop").commit("Deploy to dev"),release=develop.commit("PR 1 : Add my first humain").branch("releases/1.0.0").commit("Deploy beta");develop.merge(release),master.merge(release).tag("1.0.0"),develop.commit("PR 2 : Add my first ocean");var hotfix=master.branch("hotfix/1.0.0").commit("Add a brain to a humain");master.merge(hotfix).tag("1.0.1"),develop.merge(hotfix),develop.branch("releases/1.1.0").commit("Deploy beta")}})})).add("Deploy ocean on prod",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("Empty earth"),develop=master.branch("develop").commit("Deploy to dev"),release=develop.commit("PR 1 : Add my first humain").branch("releases/1.0.0").commit("Deploy beta");develop.merge(release),master.merge(release).tag("1.0.0"),develop.commit("PR 2 : Add my first ocean");var hotfix=master.branch("hotfix/1.0.0").commit("Add a brain to a humain");master.merge(hotfix).tag("1.0.1"),develop.merge(hotfix);release=develop.branch("releases/1.1.0").commit("Deploy beta");develop.merge(release),master.merge(release).tag("1.1.0")}})})).add("Conclusion",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("div",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("ul",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("li",{children:'La branche "develop" est la vérité'}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("li",{children:"Gitflow + GitVersion sont adapté pour des librairies (Version -alpha, -beta...)"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("li",{children:"Outils en ligne de command + implémentation dans GitKraken, SourceTree, ..."}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("li",{children:"Repackager/Rebuild pour déployer une beta/production"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("li",{children:"End release complexe et non adapté avec les PR (Merge dans develop, merge dans master, tag sur master)"})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("h2",{children:"Links"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("ul",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("li",{children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("a",{href:"https://danielkummer.github.io/git-flow-cheatsheet/index.fr_FR.html",children:"git-flow cheatsheet"})}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("li",{children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("a",{href:"https://nvie.com/posts/a-successful-git-branching-model/",children:"A successful Git branching model"})})]})]})}))}.call(this,__webpack_require__(105)(module))},1105:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(module){__webpack_require__(0);var _storybook_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(70),_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(7),_helpers__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(6),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(1);Object(_storybook_react__WEBPACK_IMPORTED_MODULE_1__.storiesOf)("gitflow/2. git lab flow",module).addParameters({storySource:{source:'import * as React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { Gitgraph, Mode, Branch } from "@gitgraph/react";\nimport { GitgraphCore } from "@gitgraph/core";\n\nimport { gitGraphOptions } from "./helpers";\n\n\n\nstoriesOf("gitflow/2. git lab flow", module)\n  .add("Initial Repos", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch("master")\n        .commit("Empty earth");\n      }}\n    </Gitgraph>\n  ))\n  .add("Deploy to dev (Do nothings)", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch("master")\n        .commit("Empty earth");\n      }}\n    </Gitgraph>\n  ))\n  .add("Create an ocean", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch("master")\n        .commit("Empty earth")\n        .branch("features/0001-add-ocean")\n        .commit("Add first ocean");\n      }}\n    </Gitgraph>\n  ))\n  .add("Create an humain", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch("master")\n        .commit("Empty earth");\n        master.branch("features/0001-add-ocean")\n        .commit("Add first ocean");\n        master.branch("features/0002-add-humain")\n        .commit("Add first humain");\n      }}\n    </Gitgraph>\n  ))\n  .add("Merge Request an humain", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch("master")\n        .commit("Empty earth");\n        master.branch("features/0001-add-ocean")\n        .commit("Add first ocean");\n        master\n        .commit("MR 01 : Add first humain");\n      }}\n    </Gitgraph>\n  ))\n  .add("Deploy a stable", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch("master")\n        .commit("Empty earth");\n        master.branch("features/0001-add-ocean")\n        .commit("Add first ocean");\n        master\n        .commit("MR 01 : Add first humain")\n        .branch("stable")\n        .commit(\'Merge to Stable\');\n      }}\n    </Gitgraph>\n  ))\n  .add("Deploy a production", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch("master")\n        .commit("Empty earth");\n        master.branch("features/0001-add-ocean")\n        .commit("Add first ocean");\n        master\n        .commit("MR 01 : Add first humain")\n        .branch("stable")\n        .commit(\'Merge to Stable\')\n        .branch("production")\n        .commit(\'Merge to Production\');\n      }}\n    </Gitgraph>\n  ))\n  .add("Fix color of ocean", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch("master")\n        .commit("Empty earth");\n        var f = master.branch("features/0001-add-ocean")\n        .commit("Add first ocean");\n        master\n        .commit("MR 01 : Add first humain")\n        .branch("stable")\n        .commit(\'Merge to Stable\')\n        .branch("production")\n        .commit(\'Merge to Production\');\n        f.commit(\'Fix color of ocean\');\n      }}\n    </Gitgraph>\n  )) \n  .add("Merge request ocean", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch("master")\n        .commit("Empty earth");\n        master\n        .commit("MR 01 : Add first humain")\n        .branch("stable")\n        .commit(\'Merge to Stable\')\n        .branch("production")\n        .commit(\'Merge to Production\');\n\n        master.commit(\'MR 02 : Add ocean\');\n      }}\n    </Gitgraph>\n  )) \n  .add("Oups humain have no brain", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch("master")\n        .commit("Empty earth");\n        master\n        .commit("MR 01 : Add first humain");\n        const stable = master.branch("stable")\n                      .commit(\'Merge to Stable\');\n        const production = stable.branch("production")\n                         .commit(\'Merge to Production\');\n\n        master.commit(\'MR 02 : Add ocean\');\n\n        master.branch(\'features/0003-add-brain\')\n              .commit(\'Add a brain\');\n      }}\n    </Gitgraph>\n  ))\n  .add("Merge request brain", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch("master")\n        .commit("Empty earth");\n        master\n        .commit("MR 01 : Add first humain");\n        const stable = master.branch("stable")\n                      .commit(\'Merge to Stable\');\n        const production = stable.branch("production")\n                         .commit(\'Merge to Production\');\n\n        master.commit(\'MR 02 : Add ocean\');\n\n        master.commit(\'MR 03 : Add a brain\');\n      }}\n    </Gitgraph>\n  ))\n  .add("Cherry pick brain on prod", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch("master")\n        .commit("Empty earth");\n        master\n        .commit("MR 01 : Add first humain");\n        const stable = master.branch("stable")\n                      .commit(\'Merge to Stable\');\n        const production = stable.branch("production")\n                         .commit(\'Merge to Production\');\n\n        master.commit(\'MR 02 : Add ocean\');\n\n        master.commit(\'MR 03 : Add a brain\');\n\n        production.branch(\'features/0003-fix-brain-in-production\')\n        .commit(\'Add a brain\');\n      }}\n    </Gitgraph>\n  ))\n  .add("Complete Merge Request on prod", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch("master")\n        .commit("Empty earth");\n        master\n        .commit("MR 01 : Add first humain");\n        const stable = master.branch("stable")\n                      .commit(\'Merge to Stable\');\n        const production = stable.branch("production")\n                         .commit(\'Merge to Production\');\n\n        master.commit(\'MR 02 : Add ocean\');\n\n        master.commit(\'MR 03 : Add a brain\');\n\n        production\n        .commit(\'MR 04 : Add a brain\');\n      }}\n    </Gitgraph>\n  ))\n  .add("Deploy ocean on stable", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch("master")\n        .commit("Empty earth");\n        master\n        .commit("MR 01 : Add first humain");\n        const stable = master.branch("stable")\n                      .commit(\'Merge to Stable\');\n        const production = stable.branch("production")\n                         .commit(\'Merge to Production\');\n\n        master.commit(\'MR 02 : Add ocean\');\n\n        master.commit(\'MR 03 : Add a brain\');\n\n        production\n        .commit(\'MR 04 : Add a brain\');\n        stable.merge(master);\n      }}\n    </Gitgraph>\n  ))\n  .add("Deploy ocean on production", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch("master")\n        .commit("Empty earth");\n        master\n        .commit("MR 01 : Add first humain");\n        const stable = master.branch("stable")\n                      .commit(\'Merge to Stable\');\n        const production = stable.branch("production")\n                         .commit(\'Merge to Production\');\n\n        master.commit(\'MR 02 : Add ocean\');\n\n        master.commit(\'MR 03 : Add a brain\');\n\n        production\n        .commit(\'MR 04 : Add a brain\');\n        stable.merge(master);\n        production.merge(stable);\n      }}\n    </Gitgraph>\n  ))\n  .add("Conclusion", () => (\n    <div>\n      <ul>\n        <li>La branche "master" est la vérité</li>\n        <li>Merge request est un environement complet</li>\n        <li>Repackager/Rebuild pour déployer une beta/production</li>\n      </ul>\n      <ul>\n        <li><a href="https://docs.gitlab.com/ee/topics/gitlab_flow.html">Introduction to GitLab Flow</a></li>\n        <li><a href="https://about.gitlab.com/blog/2020/03/05/what-is-gitlab-flow/">The problem with Git flow</a></li>\n      </ul>\n    </div>\n  ))',locationsMap:{conclusion:{startLoc:{col:7,line:248},endLoc:{col:3,line:260},startBody:{col:21,line:248},endBody:{col:3,line:260}},"deploy-ocean-on-production":{startLoc:{col:7,line:225},endLoc:{col:3,line:247},startBody:{col:37,line:225},endBody:{col:3,line:247}},"deploy-ocean-on-stable":{startLoc:{col:7,line:203},endLoc:{col:3,line:224},startBody:{col:33,line:203},endBody:{col:3,line:224}},"complete-merge-request-on-prod":{startLoc:{col:7,line:182},endLoc:{col:3,line:202},startBody:{col:41,line:182},endBody:{col:3,line:202}},"cherry-pick-brain-on-prod":{startLoc:{col:7,line:161},endLoc:{col:3,line:181},startBody:{col:36,line:161},endBody:{col:3,line:181}},"merge-request-brain":{startLoc:{col:7,line:143},endLoc:{col:3,line:160},startBody:{col:30,line:143},endBody:{col:3,line:160}},"oups-humain-have-no-brain":{startLoc:{col:7,line:124},endLoc:{col:3,line:142},startBody:{col:36,line:124},endBody:{col:3,line:142}},"merge-request-ocean":{startLoc:{col:7,line:108},endLoc:{col:3,line:123},startBody:{col:30,line:108},endBody:{col:3,line:123}},"fix-color-of-ocean":{startLoc:{col:7,line:91},endLoc:{col:3,line:107},startBody:{col:29,line:91},endBody:{col:3,line:107}},"deploy-a-production":{startLoc:{col:7,line:75},endLoc:{col:3,line:90},startBody:{col:30,line:75},endBody:{col:3,line:90}},"deploy-a-stable":{startLoc:{col:7,line:61},endLoc:{col:3,line:74},startBody:{col:26,line:61},endBody:{col:3,line:74}},"merge-request-an-humain":{startLoc:{col:7,line:49},endLoc:{col:3,line:60},startBody:{col:34,line:49},endBody:{col:3,line:60}},"create-an-humain":{startLoc:{col:7,line:37},endLoc:{col:3,line:48},startBody:{col:27,line:37},endBody:{col:3,line:48}},"create-an-ocean":{startLoc:{col:7,line:27},endLoc:{col:3,line:36},startBody:{col:26,line:27},endBody:{col:3,line:36}},"deploy-to-dev-do-nothings":{startLoc:{col:7,line:19},endLoc:{col:3,line:26},startBody:{col:38,line:19},endBody:{col:3,line:26}},"initial-repos":{startLoc:{col:7,line:11},endLoc:{col:3,line:18},startBody:{col:24,line:11},endBody:{col:3,line:18}}}}}).add("Initial Repos",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){gitgraph.branch("master").commit("Empty earth")}})})).add("Deploy to dev (Do nothings)",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){gitgraph.branch("master").commit("Empty earth")}})})).add("Create an ocean",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){gitgraph.branch("master").commit("Empty earth").branch("features/0001-add-ocean").commit("Add first ocean")}})})).add("Create an humain",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("Empty earth");master.branch("features/0001-add-ocean").commit("Add first ocean"),master.branch("features/0002-add-humain").commit("Add first humain")}})})).add("Merge Request an humain",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("Empty earth");master.branch("features/0001-add-ocean").commit("Add first ocean"),master.commit("MR 01 : Add first humain")}})})).add("Deploy a stable",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("Empty earth");master.branch("features/0001-add-ocean").commit("Add first ocean"),master.commit("MR 01 : Add first humain").branch("stable").commit("Merge to Stable")}})})).add("Deploy a production",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("Empty earth");master.branch("features/0001-add-ocean").commit("Add first ocean"),master.commit("MR 01 : Add first humain").branch("stable").commit("Merge to Stable").branch("production").commit("Merge to Production")}})})).add("Fix color of ocean",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("Empty earth"),f=master.branch("features/0001-add-ocean").commit("Add first ocean");master.commit("MR 01 : Add first humain").branch("stable").commit("Merge to Stable").branch("production").commit("Merge to Production"),f.commit("Fix color of ocean")}})})).add("Merge request ocean",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("Empty earth");master.commit("MR 01 : Add first humain").branch("stable").commit("Merge to Stable").branch("production").commit("Merge to Production"),master.commit("MR 02 : Add ocean")}})})).add("Oups humain have no brain",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("Empty earth");master.commit("MR 01 : Add first humain");master.branch("stable").commit("Merge to Stable").branch("production").commit("Merge to Production");master.commit("MR 02 : Add ocean"),master.branch("features/0003-add-brain").commit("Add a brain")}})})).add("Merge request brain",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("Empty earth");master.commit("MR 01 : Add first humain");master.branch("stable").commit("Merge to Stable").branch("production").commit("Merge to Production");master.commit("MR 02 : Add ocean"),master.commit("MR 03 : Add a brain")}})})).add("Cherry pick brain on prod",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("Empty earth");master.commit("MR 01 : Add first humain");var production=master.branch("stable").commit("Merge to Stable").branch("production").commit("Merge to Production");master.commit("MR 02 : Add ocean"),master.commit("MR 03 : Add a brain"),production.branch("features/0003-fix-brain-in-production").commit("Add a brain")}})})).add("Complete Merge Request on prod",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("Empty earth");master.commit("MR 01 : Add first humain");var production=master.branch("stable").commit("Merge to Stable").branch("production").commit("Merge to Production");master.commit("MR 02 : Add ocean"),master.commit("MR 03 : Add a brain"),production.commit("MR 04 : Add a brain")}})})).add("Deploy ocean on stable",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("Empty earth");master.commit("MR 01 : Add first humain");var stable=master.branch("stable").commit("Merge to Stable"),production=stable.branch("production").commit("Merge to Production");master.commit("MR 02 : Add ocean"),master.commit("MR 03 : Add a brain"),production.commit("MR 04 : Add a brain"),stable.merge(master)}})})).add("Deploy ocean on production",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("Empty earth");master.commit("MR 01 : Add first humain");var stable=master.branch("stable").commit("Merge to Stable"),production=stable.branch("production").commit("Merge to Production");master.commit("MR 02 : Add ocean"),master.commit("MR 03 : Add a brain"),production.commit("MR 04 : Add a brain"),stable.merge(master),production.merge(stable)}})})).add("Conclusion",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("div",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("ul",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("li",{children:'La branche "master" est la vérité'}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("li",{children:"Merge request est un environement complet"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("li",{children:"Repackager/Rebuild pour déployer une beta/production"})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("ul",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("li",{children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("a",{href:"https://docs.gitlab.com/ee/topics/gitlab_flow.html",children:"Introduction to GitLab Flow"})}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("li",{children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("a",{href:"https://about.gitlab.com/blog/2020/03/05/what-is-gitlab-flow/",children:"The problem with Git flow"})})]})]})}))}.call(this,__webpack_require__(105)(module))},1106:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(module){__webpack_require__(0);var _storybook_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(70),_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(7),_helpers__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(6),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(1);Object(_storybook_react__WEBPACK_IMPORTED_MODULE_1__.storiesOf)("gitflow/3. GitHub flow",module).addParameters({storySource:{source:'import * as React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { Gitgraph, Mode, Branch } from "@gitgraph/react";\nimport { GitgraphCore } from "@gitgraph/core";\n\nimport { gitGraphOptions } from "./helpers";\n\n\nstoriesOf("gitflow/3. GitHub flow", module)\n  .add("Initial Repos", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch("master")\n        .commit("Empty earth");\n      }}\n    </Gitgraph>\n  ))\n  .add("Deploy to dev (Do nothings all comits on master is deployable)", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch("master")\n        .commit("Empty earth");\n      }}\n    </Gitgraph>\n  ))\n  .add("Create an ocean", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch("master")\n        .commit("Empty earth")\n        .branch("add-ocean")\n        .commit("Add first ocean");\n      }}\n    </Gitgraph>\n  ))\n  .add("Create an humain", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch("master")\n        .commit("Empty earth");\n        master.branch("add-ocean")\n        .commit("Add first ocean");\n        master.branch("add-humain")\n        .commit("Add first humain");\n      }}\n    </Gitgraph>\n  ))\n  .add("Pull Request an humain", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n       const master = gitgraph.branch("master")\n       .commit("Empty earth");\n       master.branch("add-ocean")\n       .commit("Add first ocean");\n       master\n       .commit("PR 02 : Add first humain");\n     }}\n    </Gitgraph>\n  ))\n  .add("Deploy a beta (All is done)", () => (\n    <Gitgraph options={gitGraphOptions}>\n     {(gitgraph) => {\n       const master = gitgraph.branch("master")\n       .commit("Empty earth");\n       master.branch("add-ocean")\n       .commit("Add first ocean");\n       master\n       .commit("PR 02 : Add first humain");\n     }}\n    </Gitgraph>\n  ))\n  .add("Deploy a production (All is done)", () => (\n    <Gitgraph options={gitGraphOptions}>\n     {(gitgraph) => {\n       const master = gitgraph.branch("master")\n       .commit("Empty earth");\n       master.branch("add-ocean")\n       .commit("Add first ocean");\n       master\n       .commit("PR 02 : Add first humain");\n     }}\n    </Gitgraph>\n  ))\n  .add("Fix color of ocean", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n       const master = gitgraph.branch("master")\n       .commit("Empty earth");\n       var f = master.branch("add-ocean")\n       .commit("Add first ocean");\n       master\n       .commit("PR 02 : Add first humain");\n       f.commit(\'Fix color of ocean\');\n     }}\n    </Gitgraph>\n  )) \n  .add("Pull request ocean", () => (\n    <Gitgraph options={gitGraphOptions}>\n     {(gitgraph) => {\n       const master = gitgraph.branch("master")\n       .commit("Empty earth");\n       master\n       .commit("PR 02 : Add first humain");\n       master.commit(\'PR 01 : Add first ocean\');\n     }}\n    </Gitgraph>\n  )) \n  .add("Oups humain have no brain", () => (\n    <Gitgraph options={gitGraphOptions}>\n    {(gitgraph) => {\n      const master = gitgraph.branch("master")\n      .commit("Empty earth");\n      master\n      .commit("PR 02 : Add first humain");\n      master.commit(\'PR 01 : Add first ocean\');\n      master.branch(\'add-brain\')\n      .commit(\'Add a brain\');\n\n    }}\n   </Gitgraph>\n  ))\n  .add("Pull request brain", () => (\n    <Gitgraph options={gitGraphOptions}>\n    {(gitgraph) => {\n      const master = gitgraph.branch("master")\n      .commit("Empty earth");\n      master\n      .commit("PR 02 : Add first humain");\n      master.commit(\'PR 01 : Add first ocean\');\n      master\n      .commit(\'PR 03 : Add a brain\');\n    }}\n   </Gitgraph>\n  ))\n  .add("Fix brain on prod (All is done all comits on master is deployable)", () => (\n    <Gitgraph options={gitGraphOptions}>\n    {(gitgraph) => {\n      const master = gitgraph.branch("master")\n      .commit("Empty earth");\n      master\n      .commit("PR 02 : Add first humain");\n      master.commit(\'PR 01 : Add first ocean\');\n      master\n      .commit(\'PR 03 : Add a brain\');\n    }}\n   </Gitgraph>\n  ))\n  .add("Ocean is already deployed", () => (\n    <Gitgraph options={gitGraphOptions}>\n    {(gitgraph) => {\n      const master = gitgraph.branch("master")\n      .commit("Empty earth");\n      master\n      .commit("PR 02 : Add first humain");\n      master.commit(\'PR 01 : Add first ocean\');\n      master\n      .commit(\'PR 03 : Add a brain\');\n    }}\n   </Gitgraph>\n  ))\n  .add("Conclusion", () => (\n    <div>\n      <ul>\n        <li>La branche "master" est la vérité</li>\n        <li>La branche "master" est toujours déployable</li>\n        <li>Pull request est une feature complète, discuté, et travaillé.</li>\n        <li>Pas de gestion de hotfix</li>\n      </ul>\n      <ul>\n        <li><a href="https://guides.github.com/introduction/flow/">Understanding the GitHub flow</a></li>\n        <li><a href="https://githubflow.github.io/">GitHub Flow</a></li>\n        <li><a href="https://guides.github.com/">GitHub Guides</a></li>\n      </ul>\n    </div>\n  ))',locationsMap:{conclusion:{startLoc:{col:7,line:161},endLoc:{col:3,line:175},startBody:{col:21,line:161},endBody:{col:3,line:175}},"ocean-is-already-deployed":{startLoc:{col:7,line:148},endLoc:{col:3,line:160},startBody:{col:36,line:148},endBody:{col:3,line:160}},"fix-brain-on-prod-all-is-done-all-comits-on-master-is-deployable":{startLoc:{col:7,line:135},endLoc:{col:3,line:147},startBody:{col:77,line:135},endBody:{col:3,line:147}},"pull-request-brain":{startLoc:{col:7,line:122},endLoc:{col:3,line:134},startBody:{col:29,line:122},endBody:{col:3,line:134}},"oups-humain-have-no-brain":{startLoc:{col:7,line:108},endLoc:{col:3,line:121},startBody:{col:36,line:108},endBody:{col:3,line:121}},"pull-request-ocean":{startLoc:{col:7,line:97},endLoc:{col:3,line:107},startBody:{col:29,line:97},endBody:{col:3,line:107}},"fix-color-of-ocean":{startLoc:{col:7,line:84},endLoc:{col:3,line:96},startBody:{col:29,line:84},endBody:{col:3,line:96}},"deploy-a-production-all-is-done":{startLoc:{col:7,line:72},endLoc:{col:3,line:83},startBody:{col:44,line:72},endBody:{col:3,line:83}},"deploy-a-beta-all-is-done":{startLoc:{col:7,line:60},endLoc:{col:3,line:71},startBody:{col:38,line:60},endBody:{col:3,line:71}},"pull-request-an-humain":{startLoc:{col:7,line:48},endLoc:{col:3,line:59},startBody:{col:33,line:48},endBody:{col:3,line:59}},"create-an-humain":{startLoc:{col:7,line:36},endLoc:{col:3,line:47},startBody:{col:27,line:36},endBody:{col:3,line:47}},"create-an-ocean":{startLoc:{col:7,line:26},endLoc:{col:3,line:35},startBody:{col:26,line:26},endBody:{col:3,line:35}},"deploy-to-dev-do-nothings-all-comits-on-master-is-deployable":{startLoc:{col:7,line:18},endLoc:{col:3,line:25},startBody:{col:73,line:18},endBody:{col:3,line:25}},"initial-repos":{startLoc:{col:7,line:10},endLoc:{col:3,line:17},startBody:{col:24,line:10},endBody:{col:3,line:17}}}}}).add("Initial Repos",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){gitgraph.branch("master").commit("Empty earth")}})})).add("Deploy to dev (Do nothings all comits on master is deployable)",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){gitgraph.branch("master").commit("Empty earth")}})})).add("Create an ocean",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){gitgraph.branch("master").commit("Empty earth").branch("add-ocean").commit("Add first ocean")}})})).add("Create an humain",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("Empty earth");master.branch("add-ocean").commit("Add first ocean"),master.branch("add-humain").commit("Add first humain")}})})).add("Pull Request an humain",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("Empty earth");master.branch("add-ocean").commit("Add first ocean"),master.commit("PR 02 : Add first humain")}})})).add("Deploy a beta (All is done)",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("Empty earth");master.branch("add-ocean").commit("Add first ocean"),master.commit("PR 02 : Add first humain")}})})).add("Deploy a production (All is done)",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("Empty earth");master.branch("add-ocean").commit("Add first ocean"),master.commit("PR 02 : Add first humain")}})})).add("Fix color of ocean",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("Empty earth"),f=master.branch("add-ocean").commit("Add first ocean");master.commit("PR 02 : Add first humain"),f.commit("Fix color of ocean")}})})).add("Pull request ocean",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("Empty earth");master.commit("PR 02 : Add first humain"),master.commit("PR 01 : Add first ocean")}})})).add("Oups humain have no brain",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("Empty earth");master.commit("PR 02 : Add first humain"),master.commit("PR 01 : Add first ocean"),master.branch("add-brain").commit("Add a brain")}})})).add("Pull request brain",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("Empty earth");master.commit("PR 02 : Add first humain"),master.commit("PR 01 : Add first ocean"),master.commit("PR 03 : Add a brain")}})})).add("Fix brain on prod (All is done all comits on master is deployable)",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("Empty earth");master.commit("PR 02 : Add first humain"),master.commit("PR 01 : Add first ocean"),master.commit("PR 03 : Add a brain")}})})).add("Ocean is already deployed",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("Empty earth");master.commit("PR 02 : Add first humain"),master.commit("PR 01 : Add first ocean"),master.commit("PR 03 : Add a brain")}})})).add("Conclusion",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("div",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("ul",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("li",{children:'La branche "master" est la vérité'}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("li",{children:'La branche "master" est toujours déployable'}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("li",{children:"Pull request est une feature complète, discuté, et travaillé."}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("li",{children:"Pas de gestion de hotfix"})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("ul",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("li",{children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("a",{href:"https://guides.github.com/introduction/flow/",children:"Understanding the GitHub flow"})}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("li",{children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("a",{href:"https://githubflow.github.io/",children:"GitHub Flow"})}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("li",{children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("a",{href:"https://guides.github.com/",children:"GitHub Guides"})})]})]})}))}.call(this,__webpack_require__(105)(module))},1107:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(module){__webpack_require__(0);var _storybook_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(70),_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(7),_helpers__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(6),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(1);Object(_storybook_react__WEBPACK_IMPORTED_MODULE_1__.storiesOf)("gitflow/4. Microsoft git flow",module).addParameters({storySource:{source:'import * as React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { Gitgraph, Mode, Branch } from "@gitgraph/react";\nimport { GitgraphCore } from "@gitgraph/core";\n\nimport { gitGraphOptions } from "./helpers";\n\n\n\nstoriesOf("gitflow/4. Microsoft git flow", module)\n  .add("Initial Repos", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch("master")\n        .commit("Empty earth");\n      }}\n    </Gitgraph>\n  ))\n  .add("Create a release", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch("master")\n        .commit("Empty earth")\n        .branch(\'releases/M001\')\n        .commit(\'Release M001\');\n      }}\n    </Gitgraph>\n  ))\n  .add("Create ocean", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch("master")\n        .commit("Empty earth");\n        master.branch(\'releases/M001\')\n        .commit(\'Release M001\');\n        const topic = master.branch("topic/create-ocean");\n        topic.commit("Add my first ocean");\n      }}\n    </Gitgraph>\n  ))\n  .add("Create an humain", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch("master")\n        .commit("Empty earth");\n        master.branch(\'releases/M001\')\n        .commit(\'Release M001\');\n        const topic = master.branch("topic/create-ocean");\n        topic.commit("Add my first ocean");\n        const feature = master.branch("feature/create-humain");\n        feature.commit("Add an humain");\n      }}\n    </Gitgraph>\n  ))\n  .add("Squash merge humain", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch("master")\n        .commit("Empty earth");\n        master.branch(\'releases/M001\')\n        .commit(\'Release M001\');\n        const topic = master.branch("topic/create-ocean");\n        topic.commit("Add my first ocean");\n        master.commit("PR 01 : Add an humain");\n      }}\n    </Gitgraph>\n  ))\n  .add("Create a release for humain", () => (\n    <Gitgraph options={gitGraphOptions}>\n    {(gitgraph) => {\n      const master = gitgraph.branch("master")\n      .commit("Empty earth");\n      master.branch(\'releases/M001\')\n      .commit(\'Release M001\');\n      const topic = master.branch("topic/create-ocean");\n      topic.commit("Add my first ocean");\n      master.commit("PR 01 : Add an humain");\n      master.branch(\'releases/M002\')\n      .commit(\'Release M002\');\n    }}\n  </Gitgraph>\n  ))\n  .add("Fix color of ocean to blue", () => (\n    <Gitgraph options={gitGraphOptions}>\n    {(gitgraph) => {\n      const master = gitgraph.branch("master")\n      .commit("Empty earth");\n      master.branch(\'releases/M001\')\n      .commit(\'Release M001\');\n      const topic = master.branch("topic/create-ocean");\n      topic.commit("Add my first ocean");\n      master.commit("PR 01 : Add an humain");\n      master.branch(\'releases/M002\')\n      .commit(\'Release M002\');\n      topic.commit(\'Fix color of ocean\');\n    }}\n  </Gitgraph>\n  ))\n  .add("Squash merge ocean", () => (\n    <Gitgraph options={gitGraphOptions}>\n    {(gitgraph) => {\n      const master = gitgraph.branch("master")\n      .commit("Empty earth");\n      master.branch(\'releases/M001\')\n      .commit(\'Release M001\');\n      master.commit("PR 01 : Add an humain");\n      master.branch(\'releases/M002\')\n      .commit(\'Release M002\');\n      master.commit(\'PR 02 : Add ocean\')\n    }}\n  </Gitgraph>\n  ))\n  .add("Oups Humain have no brain.", () => (\n    <Gitgraph options={gitGraphOptions}>\n    {(gitgraph) => {\n      const master = gitgraph.branch("master")\n      .commit("Empty earth");\n      master.branch(\'releases/M001\')\n      .commit(\'Release M001\');\n      master.commit("PR 01 : Add an humain");\n      master.branch(\'releases/M002\')\n      .commit(\'Release M002\');\n      master.commit(\'PR 02 : Add ocean\')\n      master.branch(\'bugfix/fix-brain\')\n      .commit(\'Fix brain \');\n    }}\n  </Gitgraph>\n  ))\n  .add("Squash fix of the brain", () => (\n    <Gitgraph options={gitGraphOptions}>\n    {(gitgraph) => {\n      const master = gitgraph.branch("master")\n      .commit("Empty earth");\n      master.branch(\'releases/M001\')\n      .commit(\'Release M001\');\n      master.commit("PR 01 : Add an humain");\n      master.branch(\'releases/M002\')\n      .commit(\'Release M002\');\n      master.commit(\'PR 02 : Add ocean\')\n      master\n      .commit(\'PR 03 : Fix brain\');\n    }}\n  </Gitgraph>\n  ))\n  .add("PR a Cherry pick Hot fix on prod.", () => (\n    <Gitgraph options={gitGraphOptions}>\n    {(gitgraph) => {\n      const master = gitgraph.branch("master")\n      .commit("Empty earth");\n      var m001 = master.branch(\'releases/M001\')\n      .commit(\'Release M001\');\n      master.commit("PR 01 : Add an humain");\n      var m002 = master.branch(\'releases/M002\')\n      .commit(\'Release M002\');\n      master.commit(\'PR 02 : Add ocean\')\n      master\n      .commit(\'PR 03 : Fix brain\');\n      m001.branch(\'bugfix/fix-brain-to-M001\').commit(\'Fix brain\');\n      m002.branch(\'bugfix/fix-brain-to-M002\').commit(\'Fix brain\');\n    }}\n  </Gitgraph>\n  ))\n  .add("Squash the Hot fix on releases", () => (\n    <Gitgraph options={gitGraphOptions}>\n    {(gitgraph) => {\n      const master = gitgraph.branch("master")\n      .commit("Empty earth");\n      var m001 = master.branch(\'releases/M001\')\n      .commit(\'Release M001\');\n      master.commit("PR 01 : Add an humain");\n      var m002 = master.branch(\'releases/M002\')\n      .commit(\'Release M002\');\n      master.commit(\'PR 02 : Add ocean\')\n      master\n      .commit(\'PR 03 : Fix brain\');\n      m001.commit(\'PR 04 : Fix brain\');\n      m002.commit(\'PR 05 : Fix brain\');\n    }}\n  </Gitgraph>\n  ))  \n  .add("Deploy Ocean", () => (\n    <Gitgraph options={gitGraphOptions}>\n    {(gitgraph) => {\n      const master = gitgraph.branch("master")\n      .commit("Empty earth");\n      var m001 = master.branch(\'releases/M001\')\n      .commit(\'Release M001\');\n      master.commit("PR 01 : Add an humain");\n      var m002 = master.branch(\'releases/M002\')\n      .commit(\'Release M002\');\n      master.commit(\'PR 02 : Add ocean\')\n      master\n      .commit(\'PR 03 : Fix brain\');\n      m001.commit(\'PR 04 : Fix brain\');\n      m002.commit(\'PR 05 : Fix brain\');\n      var m003 = master.branch(\'releases/M003\')\n      .commit(\'Release M003\');\n    }}\n  </Gitgraph>\n  ))\n  .add("Conclusion", () => (\n    <div>\n      <ul>\n        <li>La branche "master" est la vérité</li>\n        <li>Différence entre topics et features</li>\n        <li>Chaque branche release correspond a une release</li>\n        <li>Hotfix/Bugfix fais sur master et cherry pick sur les release a corriger</li>\n        <li>Rings deploiment</li>\n      </ul>\n      <ul>\n        <li><a href="https://docs.microsoft.com/en-us/azure/devops/learn/devops-at-microsoft/use-git-microsoft">How We Use Git at Microsoft</a></li>\n        <li><a href="https://docs.microsoft.com/en-us/azure/devops/learn/devops-at-microsoft/release-flow">Release Flow</a></li>\n      </ul>\n    </div>\n  ))',locationsMap:{conclusion:{startLoc:{col:7,line:201},endLoc:{col:3,line:215},startBody:{col:21,line:201},endBody:{col:3,line:215}},"deploy-ocean":{startLoc:{col:7,line:181},endLoc:{col:3,line:200},startBody:{col:23,line:181},endBody:{col:3,line:200}},"squash-the-hot-fix-on-releases":{startLoc:{col:7,line:163},endLoc:{col:3,line:180},startBody:{col:41,line:163},endBody:{col:3,line:180}},"pr-a-cherry-pick-hot-fix-on-prod":{startLoc:{col:7,line:145},endLoc:{col:3,line:162},startBody:{col:44,line:145},endBody:{col:3,line:162}},"squash-fix-of-the-brain":{startLoc:{col:7,line:129},endLoc:{col:3,line:144},startBody:{col:34,line:129},endBody:{col:3,line:144}},"oups-humain-have-no-brain":{startLoc:{col:7,line:113},endLoc:{col:3,line:128},startBody:{col:37,line:113},endBody:{col:3,line:128}},"squash-merge-ocean":{startLoc:{col:7,line:99},endLoc:{col:3,line:112},startBody:{col:29,line:99},endBody:{col:3,line:112}},"fix-color-of-ocean-to-blue":{startLoc:{col:7,line:83},endLoc:{col:3,line:98},startBody:{col:37,line:83},endBody:{col:3,line:98}},"create-a-release-for-humain":{startLoc:{col:7,line:68},endLoc:{col:3,line:82},startBody:{col:38,line:68},endBody:{col:3,line:82}},"squash-merge-humain":{startLoc:{col:7,line:55},endLoc:{col:3,line:67},startBody:{col:30,line:55},endBody:{col:3,line:67}},"create-an-humain":{startLoc:{col:7,line:41},endLoc:{col:3,line:54},startBody:{col:27,line:41},endBody:{col:3,line:54}},"create-ocean":{startLoc:{col:7,line:29},endLoc:{col:3,line:40},startBody:{col:23,line:29},endBody:{col:3,line:40}},"create-a-release":{startLoc:{col:7,line:19},endLoc:{col:3,line:28},startBody:{col:27,line:19},endBody:{col:3,line:28}},"initial-repos":{startLoc:{col:7,line:11},endLoc:{col:3,line:18},startBody:{col:24,line:11},endBody:{col:3,line:18}}}}}).add("Initial Repos",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){gitgraph.branch("master").commit("Empty earth")}})})).add("Create a release",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){gitgraph.branch("master").commit("Empty earth").branch("releases/M001").commit("Release M001")}})})).add("Create ocean",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("Empty earth");master.branch("releases/M001").commit("Release M001"),master.branch("topic/create-ocean").commit("Add my first ocean")}})})).add("Create an humain",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("Empty earth");master.branch("releases/M001").commit("Release M001"),master.branch("topic/create-ocean").commit("Add my first ocean"),master.branch("feature/create-humain").commit("Add an humain")}})})).add("Squash merge humain",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("Empty earth");master.branch("releases/M001").commit("Release M001"),master.branch("topic/create-ocean").commit("Add my first ocean"),master.commit("PR 01 : Add an humain")}})})).add("Create a release for humain",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("Empty earth");master.branch("releases/M001").commit("Release M001"),master.branch("topic/create-ocean").commit("Add my first ocean"),master.commit("PR 01 : Add an humain"),master.branch("releases/M002").commit("Release M002")}})})).add("Fix color of ocean to blue",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("Empty earth");master.branch("releases/M001").commit("Release M001");var topic=master.branch("topic/create-ocean");topic.commit("Add my first ocean"),master.commit("PR 01 : Add an humain"),master.branch("releases/M002").commit("Release M002"),topic.commit("Fix color of ocean")}})})).add("Squash merge ocean",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("Empty earth");master.branch("releases/M001").commit("Release M001"),master.commit("PR 01 : Add an humain"),master.branch("releases/M002").commit("Release M002"),master.commit("PR 02 : Add ocean")}})})).add("Oups Humain have no brain.",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("Empty earth");master.branch("releases/M001").commit("Release M001"),master.commit("PR 01 : Add an humain"),master.branch("releases/M002").commit("Release M002"),master.commit("PR 02 : Add ocean"),master.branch("bugfix/fix-brain").commit("Fix brain ")}})})).add("Squash fix of the brain",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("Empty earth");master.branch("releases/M001").commit("Release M001"),master.commit("PR 01 : Add an humain"),master.branch("releases/M002").commit("Release M002"),master.commit("PR 02 : Add ocean"),master.commit("PR 03 : Fix brain")}})})).add("PR a Cherry pick Hot fix on prod.",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("Empty earth"),m001=master.branch("releases/M001").commit("Release M001");master.commit("PR 01 : Add an humain");var m002=master.branch("releases/M002").commit("Release M002");master.commit("PR 02 : Add ocean"),master.commit("PR 03 : Fix brain"),m001.branch("bugfix/fix-brain-to-M001").commit("Fix brain"),m002.branch("bugfix/fix-brain-to-M002").commit("Fix brain")}})})).add("Squash the Hot fix on releases",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("Empty earth"),m001=master.branch("releases/M001").commit("Release M001");master.commit("PR 01 : Add an humain");var m002=master.branch("releases/M002").commit("Release M002");master.commit("PR 02 : Add ocean"),master.commit("PR 03 : Fix brain"),m001.commit("PR 04 : Fix brain"),m002.commit("PR 05 : Fix brain")}})})).add("Deploy Ocean",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("Empty earth"),m001=master.branch("releases/M001").commit("Release M001");master.commit("PR 01 : Add an humain");var m002=master.branch("releases/M002").commit("Release M002");master.commit("PR 02 : Add ocean"),master.commit("PR 03 : Fix brain"),m001.commit("PR 04 : Fix brain"),m002.commit("PR 05 : Fix brain");master.branch("releases/M003").commit("Release M003")}})})).add("Conclusion",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("div",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("ul",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("li",{children:'La branche "master" est la vérité'}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("li",{children:"Différence entre topics et features"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("li",{children:"Chaque branche release correspond a une release"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("li",{children:"Hotfix/Bugfix fais sur master et cherry pick sur les release a corriger"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("li",{children:"Rings deploiment"})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("ul",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("li",{children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("a",{href:"https://docs.microsoft.com/en-us/azure/devops/learn/devops-at-microsoft/use-git-microsoft",children:"How We Use Git at Microsoft"})}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("li",{children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("a",{href:"https://docs.microsoft.com/en-us/azure/devops/learn/devops-at-microsoft/release-flow",children:"Release Flow"})})]})]})}))}.call(this,__webpack_require__(105)(module))},1108:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(module){__webpack_require__(0);var _storybook_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(70),_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(7),_helpers__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(6),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(1);Object(_storybook_react__WEBPACK_IMPORTED_MODULE_1__.storiesOf)("gitflow/5. My git flow",module).addParameters({storySource:{source:"import * as React from \"react\";\nimport { storiesOf } from \"@storybook/react\";\nimport { Gitgraph, Mode, Branch } from \"@gitgraph/react\";\nimport { GitgraphCore } from \"@gitgraph/core\";\n\nimport { gitGraphOptions } from \"./helpers\";\n\nstoriesOf(\"gitflow/5. My git flow\", module)\n  .add(\"Initial Repos\", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch(\"master\")\n        .commit(\"PR 01 : Empty earth\");\n      }}\n    </Gitgraph>\n  ))\n  .add(\"Deploy to dev\", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch(\"master\")\n        .commit(\"PR 01 : Empty earth\")\n        .tag('dev');\n      }}\n    </Gitgraph>\n  ))\n  .add(\"Create ocean\", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch(\"master\")\n        .commit(\"PR 01 : Empty earth\")\n        .tag('dev');;\n        const feature1 = master.branch(\"features/0001-create-ocean\");\n        feature1.commit(\"Add my first ocean\");\n      }}\n    </Gitgraph>\n  ))\n  .add(\"Create an humain\", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch(\"master\")\n        .commit(\"PR 01 : Empty earth\")\n        .tag('dev');;\n        const feature1 = master.branch(\"features/0001-create-ocean\");\n        feature1.commit(\"Add my first ocean\");\n        const feature2 = master.branch(\"features/0002-add-humain\");\n        feature2.commit(\"Add my first humain\");\n      }}\n    </Gitgraph>\n  ))\n  .add(\"Squash merge humain\", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch(\"master\")\n        .commit(\"PR 01 : Empty earth\");\n        const feature1 = master.branch(\"features/0001-create-ocean\");\n        feature1.commit(\"Add my first ocean\");\n        master.commit('PR 03 : Add my first humain')\n        .tag('dev');;\n      }}\n    </Gitgraph>\n  ))\n  .add(\"Deploy a beta\", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch(\"master\")\n        .commit(\"PR 01 : Empty earth\");\n        const feature1 = master.branch(\"features/0001-create-ocean\");\n        feature1.commit(\"Add my first ocean\");\n        master.commit('PR 03 : Add my first humain')\n        .tag('dev')\n        .tag('v1.0.0')\n        .tag('uat');\n      }}\n    </Gitgraph>\n  ))\n  .add(\"Deploy to prod\", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch(\"master\")\n        .commit(\"PR 01 : Empty earth\");\n        const feature1 = master.branch(\"features/0001-create-ocean\");\n        feature1.commit(\"Add my first ocean\");\n        master.commit('PR 03 : Add my first humain')\n        .tag('dev')\n        .tag('v1.0.0')\n        .tag('uat')\n        .tag('prod');\n      }}\n    </Gitgraph>\n  ))\n  .add(\"Fix color of ocean to blue\", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch(\"master\")\n        .commit(\"PR 01 : Empty earth\");\n        const feature1 = master.branch(\"features/0001-create-ocean\");\n        feature1.commit(\"Add my first ocean\");\n        master.commit('PR 03 : Add my first humain')\n        .tag('dev')\n        .tag('v1.0.0')\n        .tag('uat')\n        .tag('prod');\n        feature1.commit('Fix color of ocean to blue');\n      }}\n    </Gitgraph>\n  ))\n  .add(\"Squash merge ocean\", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch(\"master\")\n        .commit(\"PR 01 : Empty earth\");\n        master.commit('PR 03 : Add my first humain')\n        .tag('v1.0.0')\n        .tag('uat')\n        .tag('prod');\n        master.commit('PR 04 : Add my first ocean')\n        .tag('dev');\n      }}\n    </Gitgraph>\n  ))\n  .add(\"Oups Humain have no brain.\", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch(\"master\")\n        .commit(\"PR 01 : Empty earth\");\n        var prod = master.commit('PR 03 : Add my first humain')\n        .tag('v1.0.0')\n        .tag('uat')\n        .tag('prod');\n        master.commit('PR 04 : Add my first ocean')\n        .tag('dev');\n        var feature = prod.branch('features/0003-add-a-brain')\n        feature.commit('Add a brain to a humain');\n\n      }}\n    </Gitgraph>\n  ))\n  .add(\"Squash fix of the brain\", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch(\"master\")\n        .commit(\"PR 01 : Empty earth\");\n        var prod = master.commit('PR 03 : Add my first humain')\n        .tag('v1.0.0')\n        .tag('uat')\n        .tag('prod');\n        master.commit('PR 04 : Add my first ocean');\n        master.commit('PR 05 : Add a brain to a humain')\n        .tag('dev');\n      }}\n    </Gitgraph>\n  ))\n  .add(\"PR a Cherry pick Hot fix on prod.\", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch(\"master\")\n        .commit(\"PR 01 : Empty earth\");\n        \n        var prod = master\n        .commit('PR 03 : Add my first humain')\n        .tag('v1.0.0')\n        .tag('uat')\n        .tag('prod');\n        var hotFix = prod            \n            .branch('features/0003-add-a-brain-to-hotfix-v1-0-0')\n        master.commit('PR 04 : Add my first ocean');\n        master.commit('PR 05 : Add a brain to a humain')\n        .tag('dev');\n        hotFix.commit('Add a brain to a humain');\n      }}\n    </Gitgraph>\n  ))\n  .add(\"Squash the Hot fix on prod.\", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch(\"master\")\n        .commit(\"PR 01 : Empty earth\");\n        \n        var prod = master\n        .commit('PR 03 : Add my first humain')\n        .tag('v1.0.0')\n        .tag('uat')\n        .tag('prod');\n        var hotFix = prod            \n            .branch('hotfix/v1-0-0')\n        master.commit('PR 04 : Add my first ocean');\n        master.commit('PR 05 : Add a brain to a humain');\n        hotFix.commit('PR 06 : Add a brain to a humain').tag('dev');\n      }}\n    </Gitgraph>\n  ))\n  .add(\"Deploy a beta of hotfix\", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch(\"master\")\n        .commit(\"PR 01 : Empty earth\");\n        \n        var prod = master\n        .commit('PR 03 : Add my first humain')\n        .tag('v1.0.0')\n        .tag('prod');\n        var hotFix = prod            \n            .branch('hotfix/v1-0-0')\n        master.commit('PR 04 : Add my first ocean');\n        master.commit('PR 05 : Add a brain to a humain');\n        hotFix.commit('PR 06 : Add a brain to a humain')\n        .tag('dev')\n        .tag('v1.0.1')\n        .tag('uat');\n      }}\n    </Gitgraph>\n  ))\n  .add(\"Deploy Hot fix on prod.\", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch(\"master\")\n        .commit(\"PR 01 : Empty earth\");\n        \n        var prod = master\n        .commit('PR 03 : Add my first humain')\n        .tag('v1.0.0');\n        var hotFix = prod            \n            .branch('hotfix/v1-0-0')\n        master.commit('PR 04 : Add my first ocean');\n        master.commit('PR 05 : Add a brain to a humain');\n        hotFix.commit('PR 06 : Add a brain to a humain')\n        .tag('dev')\n        .tag('v1.0.1')\n        .tag('uat')\n        .tag('prod');\n      }}\n    </Gitgraph>\n  ))\n  .add(\"Deploy Ocean\", () => (\n    <Gitgraph options={gitGraphOptions}>\n      {(gitgraph) => {\n        const master = gitgraph.branch(\"master\")\n        .commit(\"PR 01 : Empty earth\");\n        \n        var prod = master\n        .commit('PR 03 : Add my first humain')\n        .tag('v1.0.0');\n        var hotFix = prod            \n            .branch(\n                { \n                  name: 'hotfix/v1-0-0',\n                 style: {\n                     label:{\n                         display: false\n                     }\n                 }\n            });\n        master.commit('PR 04 : Add my first ocean');\n        master.commit('PR 05 : Add a brain to a humain')\n        .tag('v1.1.0')\n        .tag('dev')\n        .tag('uat')\n        .tag('prod');\n        hotFix.commit('PR 06 : Add a brain to a humain')\n        .tag('v1.0.1');\n      }}\n    </Gitgraph>\n  ))",locationsMap:{"deploy-ocean":{startLoc:{col:7,line:234},endLoc:{col:3,line:263},startBody:{col:23,line:234},endBody:{col:3,line:263}},"deploy-hot-fix-on-prod":{startLoc:{col:7,line:213},endLoc:{col:3,line:233},startBody:{col:34,line:213},endBody:{col:3,line:233}},"deploy-a-beta-of-hotfix":{startLoc:{col:7,line:192},endLoc:{col:3,line:212},startBody:{col:34,line:192},endBody:{col:3,line:212}},"squash-the-hot-fix-on-prod":{startLoc:{col:7,line:173},endLoc:{col:3,line:191},startBody:{col:38,line:173},endBody:{col:3,line:191}},"pr-a-cherry-pick-hot-fix-on-prod":{startLoc:{col:7,line:153},endLoc:{col:3,line:172},startBody:{col:44,line:153},endBody:{col:3,line:172}},"squash-fix-of-the-brain":{startLoc:{col:7,line:138},endLoc:{col:3,line:152},startBody:{col:34,line:138},endBody:{col:3,line:152}},"oups-humain-have-no-brain":{startLoc:{col:7,line:121},endLoc:{col:3,line:137},startBody:{col:37,line:121},endBody:{col:3,line:137}},"squash-merge-ocean":{startLoc:{col:7,line:107},endLoc:{col:3,line:120},startBody:{col:29,line:107},endBody:{col:3,line:120}},"fix-color-of-ocean-to-blue":{startLoc:{col:7,line:91},endLoc:{col:3,line:106},startBody:{col:37,line:91},endBody:{col:3,line:106}},"deploy-to-prod":{startLoc:{col:7,line:76},endLoc:{col:3,line:90},startBody:{col:25,line:76},endBody:{col:3,line:90}},"deploy-a-beta":{startLoc:{col:7,line:62},endLoc:{col:3,line:75},startBody:{col:24,line:62},endBody:{col:3,line:75}},"squash-merge-humain":{startLoc:{col:7,line:50},endLoc:{col:3,line:61},startBody:{col:30,line:50},endBody:{col:3,line:61}},"create-an-humain":{startLoc:{col:7,line:37},endLoc:{col:3,line:49},startBody:{col:27,line:37},endBody:{col:3,line:49}},"create-ocean":{startLoc:{col:7,line:26},endLoc:{col:3,line:36},startBody:{col:23,line:26},endBody:{col:3,line:36}},"deploy-to-dev":{startLoc:{col:7,line:17},endLoc:{col:3,line:25},startBody:{col:24,line:17},endBody:{col:3,line:25}},"initial-repos":{startLoc:{col:7,line:9},endLoc:{col:3,line:16},startBody:{col:24,line:9},endBody:{col:3,line:16}}}}}).add("Initial Repos",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){gitgraph.branch("master").commit("PR 01 : Empty earth")}})})).add("Deploy to dev",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){gitgraph.branch("master").commit("PR 01 : Empty earth").tag("dev")}})})).add("Create ocean",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){gitgraph.branch("master").commit("PR 01 : Empty earth").tag("dev").branch("features/0001-create-ocean").commit("Add my first ocean")}})})).add("Create an humain",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("PR 01 : Empty earth").tag("dev");master.branch("features/0001-create-ocean").commit("Add my first ocean"),master.branch("features/0002-add-humain").commit("Add my first humain")}})})).add("Squash merge humain",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("PR 01 : Empty earth");master.branch("features/0001-create-ocean").commit("Add my first ocean"),master.commit("PR 03 : Add my first humain").tag("dev")}})})).add("Deploy a beta",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("PR 01 : Empty earth");master.branch("features/0001-create-ocean").commit("Add my first ocean"),master.commit("PR 03 : Add my first humain").tag("dev").tag("v1.0.0").tag("uat")}})})).add("Deploy to prod",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("PR 01 : Empty earth");master.branch("features/0001-create-ocean").commit("Add my first ocean"),master.commit("PR 03 : Add my first humain").tag("dev").tag("v1.0.0").tag("uat").tag("prod")}})})).add("Fix color of ocean to blue",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("PR 01 : Empty earth"),feature1=master.branch("features/0001-create-ocean");feature1.commit("Add my first ocean"),master.commit("PR 03 : Add my first humain").tag("dev").tag("v1.0.0").tag("uat").tag("prod"),feature1.commit("Fix color of ocean to blue")}})})).add("Squash merge ocean",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("PR 01 : Empty earth");master.commit("PR 03 : Add my first humain").tag("v1.0.0").tag("uat").tag("prod"),master.commit("PR 04 : Add my first ocean").tag("dev")}})})).add("Oups Humain have no brain.",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("PR 01 : Empty earth"),prod=master.commit("PR 03 : Add my first humain").tag("v1.0.0").tag("uat").tag("prod");master.commit("PR 04 : Add my first ocean").tag("dev"),prod.branch("features/0003-add-a-brain").commit("Add a brain to a humain")}})})).add("Squash fix of the brain",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("PR 01 : Empty earth");master.commit("PR 03 : Add my first humain").tag("v1.0.0").tag("uat").tag("prod");master.commit("PR 04 : Add my first ocean"),master.commit("PR 05 : Add a brain to a humain").tag("dev")}})})).add("PR a Cherry pick Hot fix on prod.",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("PR 01 : Empty earth"),hotFix=master.commit("PR 03 : Add my first humain").tag("v1.0.0").tag("uat").tag("prod").branch("features/0003-add-a-brain-to-hotfix-v1-0-0");master.commit("PR 04 : Add my first ocean"),master.commit("PR 05 : Add a brain to a humain").tag("dev"),hotFix.commit("Add a brain to a humain")}})})).add("Squash the Hot fix on prod.",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("PR 01 : Empty earth"),hotFix=master.commit("PR 03 : Add my first humain").tag("v1.0.0").tag("uat").tag("prod").branch("hotfix/v1-0-0");master.commit("PR 04 : Add my first ocean"),master.commit("PR 05 : Add a brain to a humain"),hotFix.commit("PR 06 : Add a brain to a humain").tag("dev")}})})).add("Deploy a beta of hotfix",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("PR 01 : Empty earth"),hotFix=master.commit("PR 03 : Add my first humain").tag("v1.0.0").tag("prod").branch("hotfix/v1-0-0");master.commit("PR 04 : Add my first ocean"),master.commit("PR 05 : Add a brain to a humain"),hotFix.commit("PR 06 : Add a brain to a humain").tag("dev").tag("v1.0.1").tag("uat")}})})).add("Deploy Hot fix on prod.",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("PR 01 : Empty earth"),hotFix=master.commit("PR 03 : Add my first humain").tag("v1.0.0").branch("hotfix/v1-0-0");master.commit("PR 04 : Add my first ocean"),master.commit("PR 05 : Add a brain to a humain"),hotFix.commit("PR 06 : Add a brain to a humain").tag("dev").tag("v1.0.1").tag("uat").tag("prod")}})})).add("Deploy Ocean",(function(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_gitgraph_react__WEBPACK_IMPORTED_MODULE_2__.a,{options:_helpers__WEBPACK_IMPORTED_MODULE_3__.a,children:function children(gitgraph){var master=gitgraph.branch("master").commit("PR 01 : Empty earth"),hotFix=master.commit("PR 03 : Add my first humain").tag("v1.0.0").branch({name:"hotfix/v1-0-0",style:{label:{display:!1}}});master.commit("PR 04 : Add my first ocean"),master.commit("PR 05 : Add a brain to a humain").tag("v1.1.0").tag("dev").tag("uat").tag("prod"),hotFix.commit("PR 06 : Add a brain to a humain").tag("v1.0.1")}})}))}.call(this,__webpack_require__(105)(module))},1112:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(0);var esm=__webpack_require__(80),blocks=__webpack_require__(214);__webpack_require__.p,__webpack_require__.p,__webpack_require__.p,__webpack_require__.p,__webpack_require__.p,__webpack_require__.p,__webpack_require__.p,__webpack_require__.p;function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}const layoutProps={};function MDXContent({components:components,...props}){return Object(esm.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.mdx)(blocks.Meta,{title:"GitFlow/Introduction",mdxType:"Meta"}),Object(esm.mdx)("style",null,"\n  .subheading {\n    --mediumdark: '#999999';\n    font-weight: 900;\n    font-size: 13px;\n    color: #999;\n    letter-spacing: 6px;\n    line-height: 24px;\n    text-transform: uppercase;\n    margin-bottom: 12px;\n    margin-top: 40px;\n  }\n\n  .link-list {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 1fr 1fr;\n    row-gap: 10px;\n  }\n\n  @media (min-width: 620px) {\n    .link-list {\n      row-gap: 20px;\n      column-gap: 20px;\n      grid-template-columns: 1fr 1fr;\n    }\n  }\n\n  @media all and (-ms-high-contrast:none) {\n  .link-list {\n      display: -ms-grid;\n      -ms-grid-columns: 1fr 1fr;\n      -ms-grid-rows: 1fr 1fr;\n    }\n  }\n\n  .link-item {\n    display: block;\n    padding: 20px 30px 20px 15px;\n    border: 1px solid #00000010;\n    border-radius: 5px;\n    transition: background 150ms ease-out, border 150ms ease-out, transform 150ms ease-out;\n    color: #333333;\n    display: flex;\n    align-items: flex-start;\n  }\n\n  .link-item:hover {\n    border-color: #1EA7FD50;\n    transform: translate3d(0, -3px, 0);\n    box-shadow: rgba(0, 0, 0, 0.08) 0 3px 10px 0;\n  }\n\n  .link-item:active {\n    border-color: #1EA7FD;\n    transform: translate3d(0, 0, 0);\n  }\n\n  .link-item strong {\n    font-weight: 700;\n    display: block;\n    margin-bottom: 2px;\n  }\n  \n  .link-item img {\n    height: 40px;\n    width: 40px;\n    margin-right: 15px;\n    flex: none;\n  }\n\n  .link-item span {\n    font-size: 14px;\n    line-height: 20px;\n  }\n\n  .tip {\n    display: inline-block;\n    border-radius: 1em;\n    font-size: 11px;\n    line-height: 12px;\n    font-weight: 700;\n    background: #E7FDD8;\n    color: #66BF3C;\n    padding: 4px 12px;\n    margin-right: 10px;\n    vertical-align: top;\n  }\n\n  .tip-wrapper {\n    font-size: 13px;\n    line-height: 20px;\n    margin-top: 40px;\n    margin-bottom: 40px;\n  }\n\n  .tip-wrapper code {\n    font-size: 12px;\n    display: inline-block;\n  }\n\n  \n"),Object(esm.mdx)("h1",{id:"introduction-to-gif-flows"},"Introduction to Gif flows"))}MDXContent.isMDXComponent=!0;const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"GitFlow/Introduction",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>Object(esm.mdx)(blocks.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(esm.mdx)(MDXContent,null))};__webpack_exports__.default=componentMeta},490:function(module,exports,__webpack_require__){__webpack_require__(491),__webpack_require__(655),__webpack_require__(656),__webpack_require__(814),__webpack_require__(1035),__webpack_require__(1068),__webpack_require__(1073),__webpack_require__(1085),__webpack_require__(1087),__webpack_require__(1092),__webpack_require__(1094),module.exports=__webpack_require__(1096)},564:function(module,exports){},6:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return gitGraphOptions}));var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),_gitgraph_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(56),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(1),branchesOrder=["master","hotfix","releases","develop","features","stable","production"],withoutHash=Object(_gitgraph_core__WEBPACK_IMPORTED_MODULE_1__.templateExtend)(_gitgraph_core__WEBPACK_IMPORTED_MODULE_1__.TemplateName.Metro,{commit:{message:{displayHash:!1,displayAuthor:!1}}}),gitGraphOptions={generateCommitHash:function createFixedHashGenerator(){var hashIndex=0;return function(){return"".concat("h45h").concat(hashIndex++)}}(),compareBranchesOrder:function compareBranchesOrder(a,b){return-1!=a.indexOf("/")&&(a=a.split("/")[0]),-1!=b.indexOf("/")&&(b=b.split("/")[0]),branchesOrder.indexOf(a)-branchesOrder.indexOf(b)},template:withoutHash};function GraphContainer(props){var graphContainer=Object(react__WEBPACK_IMPORTED_MODULE_0__.createRef)();return Object(react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)((function(){graphContainer.current&&props.children(graphContainer.current)})),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{ref:graphContainer})}var SVG_NAMESPACE="http://www.w3.org/2000/svg";function createSvg(options){var svg=document.createElementNS(SVG_NAMESPACE,"svg");return options?(options.children&&options.children.forEach((function(child){return svg.appendChild(child)})),options.viewBox&&svg.setAttribute("viewBox",options.viewBox),options.height&&svg.setAttribute("height",options.height.toString()),options.width&&svg.setAttribute("width",options.width.toString()),svg):svg}function createG(options){var g=document.createElementNS(SVG_NAMESPACE,"g");return options.children.forEach((function(child){return child&&g.appendChild(child)})),options.translate&&g.setAttribute("transform","translate(".concat(options.translate.x,", ").concat(options.translate.y,")")),options.fill&&g.setAttribute("fill",options.fill),options.stroke&&g.setAttribute("stroke",options.stroke),options.strokeWidth&&g.setAttribute("stroke-width",options.strokeWidth.toString()),options.onClick&&g.addEventListener("click",options.onClick),options.onMouseOver&&g.addEventListener("mouseover",options.onMouseOver),options.onMouseOut&&g.addEventListener("mouseout",options.onMouseOut),g}function createText(options){var text=document.createElementNS(SVG_NAMESPACE,"text");return text.setAttribute("alignment-baseline","central"),text.setAttribute("dominant-baseline","central"),text.textContent=options.content,options.fill&&text.setAttribute("fill",options.fill),options.font&&text.setAttribute("style","font: ".concat(options.font)),options.anchor&&text.setAttribute("text-anchor",options.anchor),options.translate&&(text.setAttribute("x",options.translate.x.toString()),text.setAttribute("y",options.translate.y.toString())),options.rotate&&text.setAttribute("transform","rotate(".concat(options.rotate,")")),options.onClick&&text.addEventListener("click",options.onClick),text}function createPath(options){var path=document.createElementNS(SVG_NAMESPACE,"path");return path.setAttribute("d",options.d),options.fill&&path.setAttribute("fill",options.fill),options.stroke&&path.setAttribute("stroke",options.stroke),options.strokeWidth&&path.setAttribute("stroke-width",options.strokeWidth.toString()),options.translate&&path.setAttribute("transform","translate(".concat(options.translate.x,", ").concat(options.translate.y,")")),path}function createForeignObject(options){var result=document.createElementNS(SVG_NAMESPACE,"foreignObject");result.setAttribute("width",options.width.toString()),options.translate&&(result.setAttribute("x",options.translate.x.toString()),result.setAttribute("y",options.translate.y.toString()));var p=document.createElement("p");return p.textContent=options.content,result.appendChild(p),result}try{GraphContainer.displayName="GraphContainer",GraphContainer.__docgenInfo={description:"A React container to wrap HTMLElement so we can render @gitgraph/js\nstories with @storybook/react.\nWe need to because Chromatic QA only handle 1 Storybook / repo.\nAnd Storybook doesn't run multiple frameworks in 1 Storybook (yet).\nSee https://github.com/storybooks/storybook/issues/3994",displayName:"GraphContainer",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/helpers.tsx#GraphContainer"]={docgenInfo:GraphContainer.__docgenInfo,name:"GraphContainer",path:"src/stories/helpers.tsx#GraphContainer"})}catch(__react_docgen_typescript_loader_error){}try{createSvg.displayName="createSvg",createSvg.__docgenInfo={description:"",displayName:"createSvg",props:{viewBox:{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string"}},height:{defaultValue:null,description:"",name:"height",required:!1,type:{name:"number"}},width:{defaultValue:null,description:"",name:"width",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/helpers.tsx#createSvg"]={docgenInfo:createSvg.__docgenInfo,name:"createSvg",path:"src/stories/helpers.tsx#createSvg"})}catch(__react_docgen_typescript_loader_error){}try{createG.displayName="createG",createG.__docgenInfo={description:"",displayName:"createG",props:{translate:{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"{ x: number; y: number; }"}},fill:{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"string"}},stroke:{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"string"}},strokeWidth:{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"number"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"(() => void)"}},onMouseOver:{defaultValue:null,description:"",name:"onMouseOver",required:!1,type:{name:"(() => void)"}},onMouseOut:{defaultValue:null,description:"",name:"onMouseOut",required:!1,type:{name:"(() => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/helpers.tsx#createG"]={docgenInfo:createG.__docgenInfo,name:"createG",path:"src/stories/helpers.tsx#createG"})}catch(__react_docgen_typescript_loader_error){}try{createText.displayName="createText",createText.__docgenInfo={description:"",displayName:"createText",props:{content:{defaultValue:null,description:"",name:"content",required:!0,type:{name:"string"}},fill:{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"string"}},font:{defaultValue:null,description:"",name:"font",required:!1,type:{name:"string"}},anchor:{defaultValue:null,description:"",name:"anchor",required:!1,type:{name:'"start" | "middle" | "end"'}},translate:{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"{ x: number; y: number; }"}},rotate:{defaultValue:null,description:"",name:"rotate",required:!1,type:{name:"number"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"(() => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/helpers.tsx#createText"]={docgenInfo:createText.__docgenInfo,name:"createText",path:"src/stories/helpers.tsx#createText"})}catch(__react_docgen_typescript_loader_error){}try{createPath.displayName="createPath",createPath.__docgenInfo={description:"",displayName:"createPath",props:{d:{defaultValue:null,description:"",name:"d",required:!0,type:{name:"string"}},fill:{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"string"}},stroke:{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"string"}},strokeWidth:{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"number"}},translate:{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"{ x: number; y: number; }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/helpers.tsx#createPath"]={docgenInfo:createPath.__docgenInfo,name:"createPath",path:"src/stories/helpers.tsx#createPath"})}catch(__react_docgen_typescript_loader_error){}try{createForeignObject.displayName="createForeignObject",createForeignObject.__docgenInfo={description:"",displayName:"createForeignObject",props:{content:{defaultValue:null,description:"",name:"content",required:!0,type:{name:"string"}},width:{defaultValue:null,description:"",name:"width",required:!0,type:{name:"number"}},translate:{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"{ x: number; y: number; }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/helpers.tsx#createForeignObject"]={docgenInfo:createForeignObject.__docgenInfo,name:"createForeignObject",path:"src/stories/helpers.tsx#createForeignObject"})}catch(__react_docgen_typescript_loader_error){}},656:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__(70)}},[[490,1,2]]]);
//# sourceMappingURL=main.386713a60ecba8decbd4.bundle.js.map